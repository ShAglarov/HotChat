{\rtf1\ansi\ansicpg1251\cocoartf2707
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;\f2\fnil\fcharset0 HelveticaNeue;
\f3\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;}
{\colortbl;\red255\green255\blue255;\red108\green121\blue134;\red18\green18\blue20;\red255\green255\blue255;
\red252\green95\blue163;\red161\green103\blue230;\red103\green183\blue164;\red161\green103\blue230;\red208\green168\blue255;
\red208\green191\blue105;\red26\green28\blue31;\red255\green255\blue255;\red35\green38\blue42;\red244\green244\blue244;
\red8\green64\blue128;\red166\green63\blue5;\red83\green92\blue101;\red38\green38\blue38;\red239\green239\blue239;
\red151\green0\blue126;\red20\green0\blue196;\red73\green17\blue135;}
{\*\expandedcolortbl;;\csgenericrgb\c42394\c47462\c52518;\csgenericrgb\c7059\c7155\c8026;\csgenericrgb\c100000\c100000\c100000\c85000;
\csgenericrgb\c98839\c37355\c63833;\csgenericrgb\c63232\c40219\c90115;\csgenericrgb\c40538\c71705\c64209;\csgenericrgb\c63137\c40392\c90196;\csgenericrgb\c81681\c65692\c99927;
\csgenericrgb\c81498\c74939\c41233;\cssrgb\c13725\c14902\c16078;\cssrgb\c100000\c100000\c100000;\cssrgb\c18431\c20000\c21569;\cssrgb\c96471\c96471\c96471;
\cssrgb\c392\c32941\c57647;\cssrgb\c71765\c32549\c392;\cssrgb\c40000\c43529\c47059;\cssrgb\c20000\c20000\c20000;\cssrgb\c94902\c94902\c94902;
\cssrgb\c66667\c5098\c56863;\cssrgb\c10980\c0\c81176;\cssrgb\c36078\c14902\c60000;}
\paperw12240\paperh15840\margl1440\margr1440\vieww9000\viewh8400\viewkind0
\deftab840
\pard\tx840\pardeftab840\pardirnatural\partightenfactor0

\f0\fs34 \cf2 \cb3 //    func scrollUp() \{\cf4 \
\cf2 //        \cf4 \
\cf2 //        //\uc0\u1087 \u1088 \u1086 \u1074 \u1077 \u1088 \u1103 \u1077 \u1084  \u1086 \u1088 \u1080 \u1077 \u1085 \u1090 \u1072 \u1094 \u1080 \u1102  \u1101 \u1082 \u1088 \u1072 \u1085 \u1072  \u1077 \u1089 \u1083 \u1080  \u1086 \u1085 \u1072  \u1075 \u1086 \u1088 \u1080 \u1079 \u1086 \u1085 \u1090 \u1072 \u1083 \u1100 \u1085 \u1072 \u1103  \u1090 \u1086  \u1089 \u1076 \u1074 \u1080 \u1075 \u1072 \u1077 \u1084  scrollView \u1085 \u1077 \u1084 \u1085 \u1086 \u1075 \u1086  \u1074 \u1074 \u1077 \u1088 \u1093 \cf4 \
\cf2 //        guard self.preferredInterfaceOrientationForPresentation.isLandscape == true else \{ return \}\cf4 \
\cf2 //        scrollView.setContentOffset(CGPoint(x: 0, y: view.bounds.height / 4), animated: true)\cf4 \
\cf2 //    \}\
\
//\uc0\u1087 \u1088 \u1086 \u1074 \u1077 \u1088 \u1082 \u1072  \u1087 \u1086 \u1074 \u1086 \u1088 \u1086 \u1090 \u1072  \u1101 \u1082 \u1088 \u1072 \u1085 \u1072  \u1077 \u1089 \u1083 \u1080  \u1086 \u1085 \u1072  \u1084 \u1077 \u1085 \u1103 \u1077 \u1090 \u1089 \u1103  \u1085 \u1072  \u1075 \u1086 \u1088 \u1080 \u1079 \u1086 \u1085 \u1072 \u1083 \u1100 \u1085 \u1091 \u1102  \u1090 \u1086  \u1089 \u1076 \u1074 \u1080 \u1075 \u1072 \u1077 \u1084  scrollView \u1085 \u1077 \u1084 \u1085 \u1086 \u1075 \u1086  \u1074 \u1074 \u1077 \u1088 \u1093 \cf4 \
        
\f1\b \cf5 \cb3 guard
\f0\b0 \cf4 \cb3  
\f1\b \cf5 \cb3 self
\f0\b0 \cf4 \cb3 .\cf6 \cb3 preferredInterfaceOrientationForPresentation\cf4 \cb3 .\cf6 \cb3 isLandscape\cf4 \cb3  == 
\f1\b \cf5 \cb3 true
\f0\b0 \cf4 \cb3  
\f1\b \cf5 \cb3 else
\f0\b0 \cf4 \cb3  \{ 
\f1\b \cf5 \cb3 return
\f0\b0 \cf4 \cb3  \}\
        \cf7 \cb3 scrollView\cf4 \cb3 .\cf8 \cb3 setContentOffset\cf4 \cb3 (\cf9 \cb3 CGPoint\cf4 \cb3 (\cf8 \cb3 x\cf4 \cb3 : \cf10 \cb3 0\cf4 \cb3 , \cf8 \cb3 y\cf4 \cb3 : \cf6 \cb3 view\cf4 \cb3 .\cf6 \cb3 bounds\cf4 \cb3 .\cf6 \cb3 height\cf4 \cb3  / \cf10 \cb3 4\cf4 \cb3 ), \cf8 \cb3 animated\cf4 \cb3 : 
\f1\b \cf5 \cb3 true
\f0\b0 \cf4 \cb3 )\
\
\pard\pardeftab720\sa330\partightenfactor0

\f2\fs30 \cf11 \cb12 \expnd0\expndtw0\kerning0
How to check the orientation of device at any point off time programmatically in iPhone ?
\f3\fs26 \cf13 \cb14    \
\pard\pardeftab720\partightenfactor0
\cf15 if\cf13  (\cf16 UIDeviceOrientationIsLandscape\cf13 ([\cf16 UIDevice\cf13  currentDevice].orientation))\
    \{\
         \cf17 // code for landscape orientation      \cf13 \
    \}\
\pard\pardeftab720\sa330\partightenfactor0

\f2\fs30 \cf11 \cb12 OR\cb1 \
\pard\pardeftab720\partightenfactor0

\f3\fs26 \cf13 \cb14     \cf15 if\cf13  (\cf16 UIDeviceOrientationIsPortrait\cf13 ([\cf16 UIDevice\cf13  currentDevice].orientation))\
    \{\
         \cf17 // code for Portrait orientation       \cf13 \
    \}\
\
\pard\pardeftab720\partightenfactor0

\f2\fs32 \AppleTypeServices\AppleTypeServicesF65539 \cf18 \cb1 My problem with my code below is that I'm trying to do it when closing a modal view and the view under it are not updated quick enough. If I put the requestGeometryUpdate on a separate button then close the view it work.\
\pard\pardeftab720\partightenfactor0

\f0\fs26 \AppleTypeServices \cf18 \cb19  \cf20 if\cf18  \cf21 #available(iOS 16.0, *) \{\cf18 \
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 let windowScene = \cf22 UIApplication\cf18 .shared.connectedScenes.first as? \cf22 UIWindowScene\cf18 \
\
\'a0 \'a0 \'a0 \'a0 \'a0 \'a0 windowScene?.requestGeometryUpdate(.iOS(interfaceOrientations: .portrait))\
\
\'a0 \'a0 \'a0 \'a0 \}\'a0}